Dockerfile 

FROM python:3.6					# указывает какой образ нужно взять, в данном случае это python версии 3.6
ENV PYTHONUNBUFFERED 1				# название окружения
RUN mkdir /config				# запуск команды создания папки с названием 'config'
COPY requirements /config/requirements 		# копирование файлов в папку 'config'
RUN pip install -r /config/requirements/dev.txt # уставнавливание зависимостей из файла txt
RUN mkdir /src 					# создание папки 'src'
WORKDIR /src 					# установка рабочей директории в контейнере докера, это значит что при входе в контейнер вы окажитесь в этой папке

Пояснения к Dockerfile

version: '2' 					# указывается версия докеркомпоз файла
services: 	
    nginx:      				# название контейнера
        image: nginx:latest 			# "image" волшебное слово, после которого пишется название образа, который необходимо загрузить, а магическое "latest" притягивает самый "свежий" доступный образ 
        container_name: ng01 			# даем тэг нашему контейнеру, это нужно делать чтобы было проще обращаться к контейнеру, если это потребуется
        ports: 					# указываем порты с которыми будет работать контейнер
            - "8000:8000" 			# соответственно, 8000 
        volumes: 				# "volumes" незаменимый параметр, который позволяет нам "примонитровать" папку с локальной машины прямо в образ файла. Это необходимо если вам необходимо заменить какой-то файла в контейнере, не останавливая его
            - ./deploy/nginx:/etc/nginx/conf.d  # пример путя. С левой стороны "./deploy/nginx" мы указываем путь монтируемой папки на локальной машине (правильней говорить, "на хосте").
        depends_on:				# указывает раньше чего должен запуститься образ. Иными словами сначала nginx, а потом уже запустится 'web' 
            - web				# в данном случае 'web'
    web:					# название контейнера 
        build: .				# сборка контейнера
        container_name: dg01			# тэг контейнера
        command: bash -c "python manage.py makemigrations && python manage.py migrate && uwsgi --ini /usr/local/etc/elevennote.ini" # запуск команды в режиме bash
        depends_on:				# указывает раньше чего должен запуститься образ, в данном случае "db"
            - db				# указывает название образа
        volumes:				# параметр для указания папок на хост машине
            - ./src:/src			# монтирование папки с хоста, в контейнер
            - ./deploy/uwsgi:/usr/local/etc/	# монтирование папки с хоста, в контейнер
        expose:					# использование определенного порта
            - "8000"				# номер порта
    db:						# название контейнера
        image: postgres:latest			# притягиваем самый свежий образ postgress
        container_name: ps01			# даем тэг для 